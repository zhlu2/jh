<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aco.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.aco.model.Role" >
    <id column="ID" property="roleId" jdbcType="VARCHAR" />
    <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
    <result column="ROLE_SIGN" property="roleSign" jdbcType="VARCHAR" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
    <result column="CREATTIME" property="createTime" jdbcType="TIMESTAMP" />  
    <collection property="permissionSet" column="permissionid"
				ofType="com.aco.model.Permission">
				<id property="permissionId" column="ID" />
				<result property="permissionName" column="PERMISSION_NAME" />
				<result property="permissionSign" column="PERMISSION_SIGN" />
				<result property="description" column="pd" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    ID, ROLE_NAME, ROLE_SIGN, DESCRIPTION, CREATTIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from ROLE
    where 1=1
    <if test="roleId != null and roleId !=''">
	and ID = #{roleId,jdbcType=VARCHAR}
	</if>
  </select>
    <select id="findNewest" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from ROLE
    where 1=1
    order by CREATTIME desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from ROLE
    where ID = #{roleId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.aco.model.Role" >
    insert into ROLE (ID, ROLE_NAME, ROLE_SIGN, 
      DESCRIPTION, CREATTIME)
    values (#{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{roleSign,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.aco.model.Role" >
    insert into ROLE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        ID,
      </if>
      <if test="roleName != null" >
        ROLE_NAME,
      </if>
      <if test="roleSign != null" >
        ROLE_SIGN,
      </if>
      <if test="description != null" >
        DESCRIPTION,
      </if>
      <if test="createTime != null" >
        CREATTIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleSign != null" >
        #{roleSign,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aco.model.Role" >
    update ROLE
    <set >
      <if test="roleName != null" >
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleSign != null" >
        ROLE_SIGN = #{roleSign,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATTIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aco.model.Role" >
    update ROLE
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      ROLE_SIGN = #{roleSign,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=VARCHAR}
    where ID = #{roleId,jdbcType=VARCHAR}
  </update>
  <select id="findRoleById" resultMap="BaseResultMap">
    select 
    	r.ID,
		r.ROLE_NAME,
		r.ROLE_SIGN,
		r.DESCRIPTION,
		p.ID,
		p.PERMISSION_NAME,
		p.PERMISSION_SIGN,
		p.DESCRIPTION as "pd"
		from
		role r,
		permission p,
		role_permission rp
		where
	    r.ID=rp.ROLE_ID
		and
		p.ID=rp.PERMISSION_ID
		and
		r.ID= #{roleId,jdbcType=VARCHAR}
  </select>
</mapper>